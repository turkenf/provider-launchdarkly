---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: projects.project.launchdarkly.upbound.io
spec:
  group: project.launchdarkly.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - launchdarkly
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Project is the Schema for the Projects API. Create and manage
          LaunchDarkly projects.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProjectSpec defines the desired state of Project
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  defaultClientSideAvailability:
                    description: A block describing which client-side SDKs can use
                      new flags by default. To learn more, read Nested Client Side
                      Availability Block. List determining which SDKs have access
                      to new flags created under the project by default
                    items:
                      properties:
                        usingEnvironmentId:
                          description: Whether feature flags created under the project
                            are available to JavaScript SDKs using the client-side
                            ID by default. Defaults to false when not using default_client_side_availability.
                          type: boolean
                        usingMobileKey:
                          description: Whether feature flags created under the project
                            are available to mobile SDKs, and other non-JavaScript
                            SDKs, using a mobile key by default. Defaults to true
                            when not using default_client_side_availability.
                          type: boolean
                      required:
                      - usingEnvironmentId
                      - usingMobileKey
                      type: object
                    type: array
                  environments:
                    description: List of nested environments blocks describing LaunchDarkly
                      environments that belong to the project. To learn more, read
                      Nested Environments Blocks. List of nested `environments` blocks
                      describing LaunchDarkly environments that belong to the project
                    items:
                      properties:
                        approvalSettings:
                          description: A nested block describing the environment approval
                            settings. To learn more about this feature, read Approvals.
                          items:
                            properties:
                              canApplyDeclinedChanges:
                                description: Set to true if changes can be applied
                                  as long as the min_num_approvals is met, regardless
                                  of whether any reviewers have declined a request.
                                  Defaults to true. Whether changes can be applied
                                  as long as minNumApprovals is met, regardless of
                                  whether any reviewers have declined a request. Defaults
                                  to true
                                type: boolean
                              canReviewOwnRequest:
                                description: Set to true if requesters can approve
                                  or decline their own request. They may always comment.
                                  Defaults to false. Whether requesters can approve
                                  or decline their own request. They may always comment.
                                type: boolean
                              minNumApprovals:
                                description: The number of approvals required before
                                  an approval request can be applied. This number
                                  must be between 1 and 5. Defaults to 1. The number
                                  of approvals required before an approval request
                                  can be applied.
                                type: number
                              required:
                                description: Set to true for changes to flags in this
                                  environment to require approval. You may only set
                                  required to true if required_approval_tags is not
                                  set and vice versa. Defaults to false. Whether any
                                  changes to flags in this environment will require
                                  approval. You may only set required or requiredApprovalTags,
                                  not both.
                                type: boolean
                              requiredApprovalTags:
                                description: An array of tags used to specify which
                                  flags with those tags require approval. You may
                                  only set required_approval_tags if required is not
                                  set to true and vice versa. An array of tags used
                                  to specify which flags with those tags require approval.
                                  You may only set requiredApprovalTags or required,
                                  not both.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        color:
                          description: 'The color swatch as an RGB hex value with
                            no leading #. For example: 000000. A color swatch (as
                            an RGB hex value with no leading ''#'', e.g. C8C8C8)'
                          type: string
                        confirmChanges:
                          description: Set to true if this environment requires confirmation
                            for flag and segment changes. This field will default
                            to false when not set. Whether or not to require confirmation
                            for flag and segment changes in this environment
                          type: boolean
                        defaultTrackEvents:
                          description: Set to true to enable data export for every
                            flag created in this environment after you configure this
                            argument. This field will default to false when not set.
                            To learn more, read Data Export. Whether or not to default
                            to sending data export events for flags created in the
                            environment
                          type: boolean
                        defaultTtl:
                          description: The TTL for the environment. This must be between
                            0 and 60 minutes. The TTL setting only applies to environments
                            using the PHP SDK. This field will default to 0 when not
                            set. To learn more, read TTL settings. The TTL for the
                            environment. This must be between 0 and 60 minutes. The
                            TTL setting only applies to environments using the PHP
                            SDK
                          type: number
                        key:
                          description: The project-unique key for the environment.
                            A change in this field will force the destruction of the
                            existing environment and the creation of a new one. A
                            project-unique key for the new environment
                          type: string
                        name:
                          description: The name of the environment. The name of the
                            new environment
                          type: string
                        requireComments:
                          description: Set to true if this environment requires comments
                            for flag and segment changes. This field will default
                            to false when not set. Whether or not to require comments
                            for flag and segment changes in this environment
                          type: boolean
                        secureMode:
                          description: Set to true to ensure a user of the client-side
                            SDK cannot impersonate another user. This field will default
                            to false when not set. Whether or not to use secure mode.
                            Secure mode ensures a user of the client-side SDK cannot
                            impersonate another user
                          type: boolean
                        tags:
                          description: The project's set of tags. Tags associated
                            with your resource
                          items:
                            type: string
                          type: array
                      required:
                      - color
                      - key
                      - name
                      type: object
                    type: array
                  includeInSnippet:
                    description: Deprecated  Whether feature flags created under the
                      project should be available to client-side SDKs by default.
                      Please migrate to default_client_side_availability to maintain
                      future compatibility. Whether feature flags created under the
                      project should be available to client-side SDKs by default
                    type: boolean
                  key:
                    description: The project's unique key. A change in this field
                      will force the destruction of the existing resource and the
                      creation of a new one. The project's unique key
                    type: string
                  name:
                    description: The project's name. A human-readable name for your
                      project
                    type: string
                  tags:
                    description: The project's set of tags. Tags associated with your
                      resource
                    items:
                      type: string
                    type: array
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: environments is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.environments)
            - message: key is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.key)
            - message: name is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)
          status:
            description: ProjectStatus defines the observed state of Project.
            properties:
              atProvider:
                properties:
                  defaultClientSideAvailability:
                    description: A block describing which client-side SDKs can use
                      new flags by default. To learn more, read Nested Client Side
                      Availability Block. List determining which SDKs have access
                      to new flags created under the project by default
                    items:
                      properties:
                        usingEnvironmentId:
                          description: Whether feature flags created under the project
                            are available to JavaScript SDKs using the client-side
                            ID by default. Defaults to false when not using default_client_side_availability.
                          type: boolean
                        usingMobileKey:
                          description: Whether feature flags created under the project
                            are available to mobile SDKs, and other non-JavaScript
                            SDKs, using a mobile key by default. Defaults to true
                            when not using default_client_side_availability.
                          type: boolean
                      type: object
                    type: array
                  environments:
                    description: List of nested environments blocks describing LaunchDarkly
                      environments that belong to the project. To learn more, read
                      Nested Environments Blocks. List of nested `environments` blocks
                      describing LaunchDarkly environments that belong to the project
                    items:
                      properties:
                        approvalSettings:
                          description: A nested block describing the environment approval
                            settings. To learn more about this feature, read Approvals.
                          items:
                            properties:
                              canApplyDeclinedChanges:
                                description: Set to true if changes can be applied
                                  as long as the min_num_approvals is met, regardless
                                  of whether any reviewers have declined a request.
                                  Defaults to true. Whether changes can be applied
                                  as long as minNumApprovals is met, regardless of
                                  whether any reviewers have declined a request. Defaults
                                  to true
                                type: boolean
                              canReviewOwnRequest:
                                description: Set to true if requesters can approve
                                  or decline their own request. They may always comment.
                                  Defaults to false. Whether requesters can approve
                                  or decline their own request. They may always comment.
                                type: boolean
                              minNumApprovals:
                                description: The number of approvals required before
                                  an approval request can be applied. This number
                                  must be between 1 and 5. Defaults to 1. The number
                                  of approvals required before an approval request
                                  can be applied.
                                type: number
                              required:
                                description: Set to true for changes to flags in this
                                  environment to require approval. You may only set
                                  required to true if required_approval_tags is not
                                  set and vice versa. Defaults to false. Whether any
                                  changes to flags in this environment will require
                                  approval. You may only set required or requiredApprovalTags,
                                  not both.
                                type: boolean
                              requiredApprovalTags:
                                description: An array of tags used to specify which
                                  flags with those tags require approval. You may
                                  only set required_approval_tags if required is not
                                  set to true and vice versa. An array of tags used
                                  to specify which flags with those tags require approval.
                                  You may only set requiredApprovalTags or required,
                                  not both.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        color:
                          description: 'The color swatch as an RGB hex value with
                            no leading #. For example: 000000. A color swatch (as
                            an RGB hex value with no leading ''#'', e.g. C8C8C8)'
                          type: string
                        confirmChanges:
                          description: Set to true if this environment requires confirmation
                            for flag and segment changes. This field will default
                            to false when not set. Whether or not to require confirmation
                            for flag and segment changes in this environment
                          type: boolean
                        defaultTrackEvents:
                          description: Set to true to enable data export for every
                            flag created in this environment after you configure this
                            argument. This field will default to false when not set.
                            To learn more, read Data Export. Whether or not to default
                            to sending data export events for flags created in the
                            environment
                          type: boolean
                        defaultTtl:
                          description: The TTL for the environment. This must be between
                            0 and 60 minutes. The TTL setting only applies to environments
                            using the PHP SDK. This field will default to 0 when not
                            set. To learn more, read TTL settings. The TTL for the
                            environment. This must be between 0 and 60 minutes. The
                            TTL setting only applies to environments using the PHP
                            SDK
                          type: number
                        key:
                          description: The project-unique key for the environment.
                            A change in this field will force the destruction of the
                            existing environment and the creation of a new one. A
                            project-unique key for the new environment
                          type: string
                        name:
                          description: The name of the environment. The name of the
                            new environment
                          type: string
                        requireComments:
                          description: Set to true if this environment requires comments
                            for flag and segment changes. This field will default
                            to false when not set. Whether or not to require comments
                            for flag and segment changes in this environment
                          type: boolean
                        secureMode:
                          description: Set to true to ensure a user of the client-side
                            SDK cannot impersonate another user. This field will default
                            to false when not set. Whether or not to use secure mode.
                            Secure mode ensures a user of the client-side SDK cannot
                            impersonate another user
                          type: boolean
                        tags:
                          description: The project's set of tags. Tags associated
                            with your resource
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  id:
                    type: string
                  includeInSnippet:
                    description: Deprecated  Whether feature flags created under the
                      project should be available to client-side SDKs by default.
                      Please migrate to default_client_side_availability to maintain
                      future compatibility. Whether feature flags created under the
                      project should be available to client-side SDKs by default
                    type: boolean
                  key:
                    description: The project's unique key. A change in this field
                      will force the destruction of the existing resource and the
                      creation of a new one. The project's unique key
                    type: string
                  name:
                    description: The project's name. A human-readable name for your
                      project
                    type: string
                  tags:
                    description: The project's set of tags. Tags associated with your
                      resource
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
